/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by drizzle-zero.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { ZeroCustomType } from "drizzle-zero";
import type { default as zeroSchema } from "./drizzle-zero.config";

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    account: {
      name: "account",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "id"
          >,
        },
        providerAccountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "providerAccountId"
          >,
          serverName: "provider_account_id",
        },
        providerId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "providerId"
          >,
          serverName: "provider_id",
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "userId"
          >,
          serverName: "user_id",
        },
        access_token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "access_token"
          >,
        },
        refresh_token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "refresh_token"
          >,
        },
        id_token: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "id_token"
          >,
        },
        access_token_expires: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "access_token_expires"
          >,
        },
        refreshTokenExpiresAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "refreshTokenExpiresAt"
          >,
          serverName: "refresh_token_expires_at",
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "scope"
          >,
        },
        password: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "password"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "account",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
    activities: {
      name: "activities",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "name"
          >,
        },
        description: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "description"
          >,
        },
        kudos: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "kudos"
          >,
        },
        start: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "start"
          >,
        },
        elapsedTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "elapsedTime"
          >,
        },
        movingTime: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "movingTime"
          >,
        },
        type: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "type"
          >,
        },
        elevation: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "elevation"
          >,
        },
        distance: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "distance"
          >,
        },
        visibility: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "visibility"
          >,
        },
        updatedAt: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "activities",
            "updatedAt"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "activity",
    },
    user: {
      name: "user",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            typeof zeroSchema,
            "user",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
    },
  },
  relationships: {
    user: {
      provider: [
        {
          sourceField: ["id"],
          destField: ["userId"],
          destSchema: "account",
          cardinality: "one",
        },
      ],
    },
  },
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "account" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Account = Row<Schema["tables"]["account"]>;
/**
 * Represents a row from the "activities" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Activity = Row<Schema["tables"]["activities"]>;
/**
 * Represents a row from the "user" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["user"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
